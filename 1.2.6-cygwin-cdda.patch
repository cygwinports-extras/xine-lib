--- origsrc/xine-lib-1.2.6/include/xine/xineutils.h	2014-02-26 09:49:10.000000000 -0600
+++ src/xine-lib-1.2.6/include/xine/xineutils.h	2015-10-30 11:08:42.409774000 -0500
@@ -29,7 +29,7 @@ extern "C" {
 #include <stdarg.h>
 #include <pthread.h>
 
-#ifdef WIN32
+#if defined(WIN32) && !defined(__CYGWIN__)
 #  include <winsock.h>
 #else
 #  include <sys/time.h>
--- origsrc/xine-lib-1.2.6/src/input/input_cdda.c	2013-09-18 05:04:54.000000000 -0500
+++ src/xine-lib-1.2.6/src/input/input_cdda.c	2015-10-30 11:23:51.792750900 -0500
@@ -43,7 +43,7 @@
 #  include <alloca.h>
 #endif
 
-#ifdef HAVE_SYS_IOCTL_H
+#if !defined(WIN32) && !defined(__CYGWIN__)
 #  include <sys/ioctl.h>
 #else
 /* for WIN32 */
@@ -84,7 +84,7 @@
 
 #if defined(__sun)
 #define	DEFAULT_CDDA_DEVICE	"/vol/dev/aliases/cdrom0"
-#elif defined(WIN32)
+#elif defined(WIN32) || defined(__CYGWIN__)
 #define DEFAULT_CDDA_DEVICE "d:\\"
 #elif defined(__OpenBSD__)
 #define	DEFAULT_CDDA_DEVICE	"/dev/rcd0c"
@@ -183,11 +183,11 @@ typedef struct {
   int                  cache_first;
   int                  cache_last;
 
-#ifdef WIN32
+#if defined(WIN32) || defined(__CYGWIN__)
     HANDLE h_device_handle;                         /* vcd device descriptor */
   long  hASPI;
   short i_sid;
-  long  (*lpSendCommand)( void* );
+  DWORD  (*lpSendCommand)( void* );
 #endif
 
 } cdda_input_plugin_t;
@@ -215,7 +215,7 @@ typedef struct {
 } cdda_input_class_t;
 
 
-#ifdef WIN32
+#if defined(WIN32) || defined(__CYGWIN__)
 
 /* size of a CD sector */
 #define CD_SECTOR_SIZE 2048
@@ -821,7 +821,7 @@ static int read_cdrom_frames(cdda_input_
   return 0;
 }
 
-#elif defined(WIN32)
+#elif defined(WIN32) || defined(__CYGWIN__)
 
 static int read_cdrom_toc(cdda_input_plugin_t *this_gen, cdrom_toc *toc) {
 
@@ -971,7 +971,7 @@ static int read_cdrom_frames(cdda_input_
 #define _BUFSIZ 300
 
 
-#ifndef WIN32
+#if !defined(WIN32) && !defined(__CYGWIN__)
 static int parse_url (char *urlbuf, char** host, int *port) {
   char   *start = NULL;
   char   *portcolon = NULL;
@@ -1057,7 +1057,7 @@ network_command( xine_stream_t *stream,
 }
 
 
-#ifndef WIN32
+#if !defined(WIN32) && !defined(__CYGWIN__)
 static int network_connect(xine_stream_t *stream, const char *got_url )
 {
   char *host;
@@ -1926,7 +1926,7 @@ static void _cdda_free_cddb_info(cdda_in
 
 static int cdda_open(cdda_input_plugin_t *this_gen,
 					 const char *cdda_device, cdrom_toc *toc, int *fdd) {
-#ifndef WIN32
+#if !defined(WIN32) && !defined(__CYGWIN__)
   int fd = -1;
 
   if ( !cdda_device ) return -1;
@@ -1996,8 +1996,8 @@ static int cdda_open(cdda_input_plugin_t
   else
     {
       HMODULE hASPI = NULL;
-      long (*lpGetSupport)( void ) = NULL;
-      long (*lpSendCommand)( void* ) = NULL;
+      DWORD (*lpGetSupport)( void ) = NULL;
+      DWORD (*lpSendCommand)( void* ) = NULL;
       DWORD dwSupportInfo;
       int i, j, i_hostadapters;
       char c_drive = cdda_device[0];
@@ -2005,9 +2005,9 @@ static int cdda_open(cdda_input_plugin_t
       hASPI = LoadLibrary( "wnaspi32.dll" );
       if( hASPI != NULL )
 	{
-	  lpGetSupport = GetProcAddress( hASPI,
+	  lpGetSupport = (typeof(lpGetSupport)) GetProcAddress( hASPI,
 						   "GetASPI32SupportInfo" );
-	  lpSendCommand = GetProcAddress( hASPI,
+	  lpSendCommand = (typeof(lpSendCommand)) GetProcAddress( hASPI,
 						    "SendASPI32Command" );
 	}
 
@@ -2130,7 +2130,7 @@ static int cdda_close(cdda_input_plugin_
     close(this_gen->net_fd);
   this_gen->net_fd = -1;
 
-#ifdef WIN32
+#if defined(WIN32) || defined(__CYGWIN__)
   if( this_gen->h_device_handle )
      CloseHandle( this_gen->h_device_handle );
   this_gen->h_device_handle = NULL;
@@ -2172,7 +2172,7 @@ static off_t cdda_plugin_read (input_plu
     if( this->cache_last > this->last_frame )
       this->cache_last = this->last_frame;
 
-#ifndef WIN32
+#if !defined(WIN32) && !defined(__CYGWIN__)
     if ( this->fd != -1 )
 #else
 	if ( this->h_device_handle )
@@ -2298,7 +2298,7 @@ static int cdda_plugin_open (input_plugi
   else
     cdda_device = class->cdda_device;
 
-#ifndef WIN32
+#if !defined(WIN32) && !defined(__CYGWIN__)
   if( strchr(cdda_device,':') ) {
     fd = network_connect(this->stream, cdda_device);
     if( fd != -1 ) {
@@ -2316,7 +2316,7 @@ static int cdda_plugin_open (input_plugi
       return 0;
     }
 
-#ifndef WIN32
+#if !defined(WIN32) && !defined(__CYGWIN__)
     err = read_cdrom_toc(this->fd, toc);
 #else
     err = read_cdrom_toc(this, toc);
@@ -2480,7 +2480,7 @@ static const char * const * cdda_class_g
     ip->net_fd = -1;
   }
 
-#ifndef WIN32
+#if !defined(WIN32) && !defined(__CYGWIN__)
   if( strchr(this->cdda_device,':') ) {
     fd = network_connect(ip->stream, this->cdda_device);
     if( fd != -1 ) {
@@ -2497,7 +2497,7 @@ static const char * const * cdda_class_g
       return NULL;
     }
 
-#ifndef WIN32
+#if !defined(WIN32) && !defined(__CYGWIN__)
     err = read_cdrom_toc(fd, toc);
 #else
     err = read_cdrom_toc(ip, toc);
